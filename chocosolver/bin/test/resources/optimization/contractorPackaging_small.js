defaultScope(10);
intRange(-100, 100);

c0_Contractor = Abstract("c0_Contractor");
c0_ContractorMethod = Abstract("c0_ContractorMethod");
c0_MethodVU = Abstract("c0_MethodVU");
c0_ValueUnit = Abstract("c0_ValueUnit");
c0_Problem = Abstract("c0_Problem");
c0_methods = c0_Contractor.addChild("c0_methods");
c0_assignedVUs = c0_Contractor.addChild("c0_assignedVUs");
c0_methodVUs = c0_ContractorMethod.addChild("c0_methodVUs");
c0_contractor = c0_ContractorMethod.addChild("c0_contractor").withCard(1, 1);
c0_cost = c0_MethodVU.addChild("c0_cost").withCard(1, 1);
c0_time = c0_MethodVU.addChild("c0_time").withCard(1, 1);
c0_valueUnit = c0_MethodVU.addChild("c0_valueUnit").withCard(1, 1);
c0_appliedContractorMethod = c0_ValueUnit.addChild("c0_appliedContractorMethod").withCard(1, 1);
c0_appliedMethodVU = c0_ValueUnit.addChild("c0_appliedMethodVU").withCard(1, 1);
c0_assignedContractor = c0_ValueUnit.addChild("c0_assignedContractor").withCard(1, 1);
c0_criterion1 = c0_ValueUnit.addChild("c0_criterion1").withCard(1, 1);
c0_criterion2 = c0_ValueUnit.addChild("c0_criterion2").withCard(1, 1);
c0_criterion3 = c0_ValueUnit.addChild("c0_criterion3").withCard(1, 1);
c0_criterion4 = c0_ValueUnit.addChild("c0_criterion4").withCard(1, 1);
c0_criterion5 = c0_ValueUnit.addChild("c0_criterion5").withCard(1, 1);
c0_total_criterion1 = c0_Problem.addChild("c0_total_criterion1").withCard(1, 1);
c0_total_criterion2 = c0_Problem.addChild("c0_total_criterion2").withCard(1, 1);
c0_MyProblem = Clafer("c0_MyProblem").withCard(1, 1).extending(c0_Problem);
c0_financially_unstable_value_units = Clafer("c0_financially_unstable_value_units");
c0_inexperienced_value_units = Clafer("c0_inexperienced_value_units");
c0_high_rate_value_units = Clafer("c0_high_rate_value_units");
c0_VU1 = Clafer("c0_VU1").withCard(1, 1).extending(c0_ValueUnit);
c0_VU2 = Clafer("c0_VU2").withCard(1, 1).extending(c0_ValueUnit);
c0_ContractorA = Clafer("c0_ContractorA").withCard(1, 1).extending(c0_Contractor);
c0_ContractorMethodA1 = c0_ContractorA.addChild("c0_ContractorMethodA1").withCard(1, 1).extending(c0_ContractorMethod);
c0_methodVU1 = c0_ContractorMethodA1.addChild("c0_methodVU1").withCard(1, 1).extending(c0_MethodVU);
c0_methodVU2 = c0_ContractorMethodA1.addChild("c0_methodVU2").withCard(1, 1).extending(c0_MethodVU);
c0_ContractorMethodA2 = c0_ContractorA.addChild("c0_ContractorMethodA2").withCard(1, 1).extending(c0_ContractorMethod);
c1_methodVU1 = c0_ContractorMethodA2.addChild("c1_methodVU1").withCard(1, 1).extending(c0_MethodVU);
c1_methodVU2 = c0_ContractorMethodA2.addChild("c1_methodVU2").withCard(1, 1).extending(c0_MethodVU);
c0_ContractorMethodA3 = c0_ContractorA.addChild("c0_ContractorMethodA3").withCard(1, 1).extending(c0_ContractorMethod);
c2_methodVU1 = c0_ContractorMethodA3.addChild("c2_methodVU1").withCard(1, 1).extending(c0_MethodVU);
c2_methodVU2 = c0_ContractorMethodA3.addChild("c2_methodVU2").withCard(1, 1).extending(c0_MethodVU);
c0_ContractorB = Clafer("c0_ContractorB").withCard(1, 1).extending(c0_Contractor);
c0_ContractorMethodB1 = c0_ContractorB.addChild("c0_ContractorMethodB1").withCard(1, 1).extending(c0_ContractorMethod);
c3_methodVU1 = c0_ContractorMethodB1.addChild("c3_methodVU1").withCard(1, 1).extending(c0_MethodVU);
c3_methodVU2 = c0_ContractorMethodB1.addChild("c3_methodVU2").withCard(1, 1).extending(c0_MethodVU);
c0_methods.refToUnique(c0_ContractorMethod);
c0_assignedVUs.refToUnique(c0_ValueUnit);
c0_methodVUs.refToUnique(c0_MethodVU);
c0_contractor.refToUnique(c0_Contractor);
c0_cost.refTo(Int);
c0_time.refTo(Int);
c0_valueUnit.refToUnique(c0_ValueUnit);
c0_appliedContractorMethod.refToUnique(c0_ContractorMethod);
c0_appliedMethodVU.refToUnique(c0_MethodVU);
c0_assignedContractor.refToUnique(c0_Contractor);
c0_criterion1.refTo(Int);
c0_criterion2.refTo(Int);
c0_criterion3.refTo(Int);
c0_criterion4.refTo(Int);
c0_criterion5.refTo(Int);
c0_total_criterion1.refTo(Int);
c0_total_criterion2.refTo(Int);
c0_financially_unstable_value_units.refToUnique(c0_ValueUnit);
c0_inexperienced_value_units.refToUnique(c0_ValueUnit);
c0_high_rate_value_units.refToUnique(c0_ValueUnit);
Constraint(all([decl([vu = local("vu")], global(c0_ValueUnit))], ifOnlyIf(lessThanEqual(joinRef(join(vu, c0_criterion3)), constant(2)), $in(vu, joinRef(global(c0_financially_unstable_value_units))))));
Constraint(all([decl([vu = local("vu")], global(c0_ValueUnit))], ifOnlyIf(lessThanEqual(joinRef(join(vu, c0_criterion4)), constant(5)), $in(vu, joinRef(global(c0_inexperienced_value_units))))));
Constraint(all([decl([vu = local("vu")], global(c0_ValueUnit))], ifOnlyIf(equal(joinRef(join(vu, c0_criterion5)), constant(9)), $in(vu, joinRef(global(c0_high_rate_value_units))))));
c0_methods.addConstraint(equal(joinRef(join(joinRef($this()), c0_contractor)), joinParent($this())));
c0_assignedVUs.addConstraint(equal(joinRef(join(joinRef($this()), c0_assignedContractor)), joinParent($this())));
c0_ContractorMethod.addConstraint($in($this(), joinRef(join(joinRef(join($this(), c0_contractor)), c0_methods))));
c0_ContractorMethod.addConstraint(all([disjDecl([m1 = local("m1"), m2 = local("m2")], join($this(), c0_methodVUs))], notEqual(joinRef(join(joinRef(m1), c0_valueUnit)), joinRef(join(joinRef(m2), c0_valueUnit)))));
c0_ValueUnit.addConstraint($in(joinRef(join($this(), c0_appliedMethodVU)), joinRef(join(joinRef(join($this(), c0_appliedContractorMethod)), c0_methodVUs))));
c0_ValueUnit.addConstraint(equal(joinRef(join(joinRef(join($this(), c0_appliedMethodVU)), c0_valueUnit)), $this()));
c0_ValueUnit.addConstraint(equal(joinRef(join($this(), c0_assignedContractor)), joinRef(join(joinRef(join($this(), c0_appliedContractorMethod)), c0_contractor))));
c0_ValueUnit.addConstraint($in($this(), joinRef(join(joinRef(join($this(), c0_assignedContractor)), c0_assignedVUs))));
c0_ValueUnit.addConstraint(equal(joinRef(join($this(), c0_criterion1)), joinRef(join(joinRef(join($this(), c0_appliedMethodVU)), c0_time))));
c0_ValueUnit.addConstraint(equal(joinRef(join($this(), c0_criterion2)), joinRef(join(joinRef(join($this(), c0_appliedMethodVU)), c0_cost))));
c0_Problem.addConstraint(equal(joinRef(join($this(), c0_total_criterion1)), sum(join(global(c0_ValueUnit), c0_criterion1))));
c0_Problem.addConstraint(equal(joinRef(join($this(), c0_total_criterion2)), sum(join(global(c0_ValueUnit), c0_criterion2))));
c0_VU1.addConstraint(equal(joinRef(join($this(), c0_criterion3)), constant(3)));
c0_VU1.addConstraint(equal(joinRef(join($this(), c0_criterion4)), constant(4)));
c0_VU1.addConstraint(equal(joinRef(join($this(), c0_criterion5)), constant(5)));
c0_VU2.addConstraint(equal(joinRef(join($this(), c0_criterion3)), constant(1)));
c0_VU2.addConstraint(equal(joinRef(join($this(), c0_criterion4)), constant(2)));
c0_VU2.addConstraint(equal(joinRef(join($this(), c0_criterion5)), constant(3)));
c0_ContractorA.addConstraint(equal(joinRef(join($this(), c0_methods)), union(union(join($this(), c0_ContractorMethodA1), join($this(), c0_ContractorMethodA2)), join($this(), c0_ContractorMethodA3))));
c0_ContractorMethodA1.addConstraint(equal(joinRef(join($this(), c0_methodVUs)), union(join($this(), c0_methodVU1), join($this(), c0_methodVU2))));
c0_methodVU1.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU1)));
c0_methodVU1.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(1)));
c0_methodVU1.addConstraint(equal(joinRef(join($this(), c0_time)), constant(2)));
c0_methodVU2.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU2)));
c0_methodVU2.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(2)));
c0_methodVU2.addConstraint(equal(joinRef(join($this(), c0_time)), constant(3)));
c0_ContractorMethodA2.addConstraint(equal(joinRef(join($this(), c0_methodVUs)), union(join($this(), c1_methodVU1), join($this(), c1_methodVU2))));
c1_methodVU1.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU1)));
c1_methodVU1.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(2)));
c1_methodVU1.addConstraint(equal(joinRef(join($this(), c0_time)), constant(1)));
c1_methodVU2.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU2)));
c1_methodVU2.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(3)));
c1_methodVU2.addConstraint(equal(joinRef(join($this(), c0_time)), constant(2)));
c0_ContractorMethodA3.addConstraint(equal(joinRef(join($this(), c0_methodVUs)), union(join($this(), c2_methodVU1), join($this(), c2_methodVU2))));
c2_methodVU1.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU1)));
c2_methodVU1.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(2)));
c2_methodVU1.addConstraint(equal(joinRef(join($this(), c0_time)), constant(1)));
c2_methodVU2.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU2)));
c2_methodVU2.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(3)));
c2_methodVU2.addConstraint(equal(joinRef(join($this(), c0_time)), constant(2)));
c0_ContractorB.addConstraint(equal(joinRef(join($this(), c0_methods)), join($this(), c0_ContractorMethodB1)));
c0_ContractorMethodB1.addConstraint(equal(joinRef(join($this(), c0_methodVUs)), union(join($this(), c3_methodVU1), join($this(), c3_methodVU2))));
c3_methodVU1.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU1)));
c3_methodVU1.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(1)));
c3_methodVU1.addConstraint(equal(joinRef(join($this(), c0_time)), constant(3)));
c3_methodVU2.addConstraint(equal(joinRef(join($this(), c0_valueUnit)), global(c0_VU2)));
c3_methodVU2.addConstraint(equal(joinRef(join($this(), c0_cost)), constant(2)));
c3_methodVU2.addConstraint(equal(joinRef(join($this(), c0_time)), constant(3)));
min(joinRef(join(global(c0_MyProblem), c0_total_criterion1)));
min(joinRef(join(global(c0_MyProblem), c0_total_criterion2)));
